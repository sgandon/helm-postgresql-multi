{{- if .Values.postgresqlembedded.enabled }}
##wait for embedded postgres chart to have created a secret and then create the expected final master secret
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-init-postgresql-embedded-secret-job
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": hook-succeeded
  labels:
{{ include "tpostgresql.labels" . | indent 4 }}
spec:
  template:
    spec:
      serviceAccountName: {{ template "tpostgresql.serviceAccoundName" . }}    
      containers:
      - name: {{ .Release.Name }}-init-postgresql-secret-job
        image: dtzar/helm-kubectl:2.8.0
        command: ["sh", "-c", "RESULT=$(kubectl create secret generic $SECRET_NAME --namespace $SECRET_NAMESPACE --from-literal='postgresql.host'=$POSTGRESQL_HOST --from-literal='postgresql.user'=$POSTGRESQL_USER --from-literal='postgresql.password'=$POSTGRESQL_PASSWORD --from-literal='postgresql.database'=$POSTGRESQL_DATABASE --from-literal='postgresql.port'=$POSTGRESQL_PORT 2>&1); EXIT_CODE=$?; echo $RESULT | grep -q \"AlreadyExists\"; if [ $? = 0 ]; then echo 0; else echo $RESULT; echo $EXIT_CODE; fi;"]
        env:
          - name: POSTGRESQL_HOST
            value: {{ include "tpostgresql.postgresql.embedded.host" . }}
          - name: SECRET_NAME
            value: {{ include "tpostgresql.master.secret" . }}
          - name: SECRET_NAMESPACE
            value: {{ .Release.Namespace }}
          - name: POSTGRESQL_USER
            value: {{ .Values.postgresqlembedded.postgresUser }}
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "tpostgresql.embedded.secret" . }}
                key: postgres-password
          - name: POSTGRESQL_DATABASE
            value: {{ .Values.postgresqlembedded.postgresDatabase }}
          - name: POSTGRESQL_PORT
            value: {{ .Values.postgresqlembedded.service.port | quote }}
      restartPolicy: Never            
{{- end }}
      